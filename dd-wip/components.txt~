Thin client
Fat server
Two layer

Components
- Un componente per gestire la distribuzione dei taxi per mantenere la copertura e comunicare coi tassisti
	- Sappiamo già che è un thread/processo a parte
	- Gira sul server
	- Legge il database di zone e il database di taxi
	- Comunicazione sincrona: vincoli di tempo
	- Moduli
		- Un modulo che fa query al DBMS -> comunica col database tassisti e con il modulo analisi
		- Un modulo che analizza i risultati delle query per trovare la copertura -> comunica col modulo comunicazione
		- Un modulo che manda messaggi ai tassisti -> comunica con la classe tassista che metterà il messaggio nel database tassisti da cui poi lo recupererà
		-
	-
- Un componente per raccogliere le reservation e le request for service
	- Usa il database di request
	- Gira sul server
	- Comunicazione sincrona: Dice con limiti di tempo al database manager di scrivere
	- Moduli
		- 
		-
	-
- Un componente per leggere il database di request e reservation e allocarle ai tassisti
	- Legge ciclicamente l'elenco di richieste e alloca quelle per cui è giunta l'ora
	- Dice anche ai passeggeri se non si può fare
	- Usa il database di request e il database di taxi
	- Gira sul server
	- Comunicazione sincrona: vincoli di tempo nella comunicazione e nell'esecuzione delle query
	-
- Un componente che gestisce le code di taxi nelle zone (ridondante?)
- Un componente per gestire il sign up
	- Usa il database di passeggeri e taxi
	- Gira sul server
	- Comunicazione asincrona: non ci sono vincoli stringenti di tempo per registrare un nuovo utente
	-
- Un componente per gestire il log in
	- Usa il database di passeggeri e taxi
	- Gira sul server
	- Comunicazione asincrona: si spera che ci metta poco ma non è urgente come altre cose
	-
- Un componente che smista i messaggi che arrivano dagli utenti
	- Gira sul server
	- Comunica con gli altri componenti lato server
	-
- Due componenti app / webapp che si interfaccino con il server per la comunicazione con gli utenti (tassiti e passeggeri)
	- Gira sui device di ogni utente
	- Thin client
	-
-

- Un database di passeggeri
- Un database di taxi e tassiti
- Un database di zone cittadine
- Un database di request (sia real time che reservation)
	- Ogni richiesta ha una data e ora in cui deve essere eseguita; una richiesta real time ha l'ora in cui viene fatta e una prenotazione quella per cui è stata richiesta
	-
-

